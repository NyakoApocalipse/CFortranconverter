/**********************************************************************/
/* File:                                                              */
/* Author:                                                            */
/* This codes is generated by CFortranTranslator                      */
/* CFortranTranslator is published under GPL license                  */
/* refer to https://github.com/CalvinNeo/CFortranTranslator/ for more */
/**********************************************************************/
#include "../for90std/for90std.h" 
#define USE_FORARRAY 
#ifndef type_vars
#define type_vars
const long double eight = 8.0;
const long double eighth = 0.12500000000000000;
const long double five = 5.0;
const long double four = 4.0;
const long double fourth = 0.25000000000000000;
const long double fourthird = 1.33333333333333333;
const long double half = 0.50000000000000000;
const long double hundred = 100.0;
const int32_t lnv = 32;
const int32_t max_string_length = 64;
const long double nine = 9.0;
const long double ninth = 0.11111111111111111;
const long double one = 1.0;
const long double pi = 3.14159265358979323846264338327950288419716939937511;
const long double root2 = 1.4142135623730950;
const long double root3 = 1.7320508075688773;
const long double root_eps = 0.000000059604644775390625;
const long double seven = 7.0;
const long double six = 6.0;
const long double sixteen = 16.0;
const long double sixth = 0.16666666666666667;
const long double sixtyfour = 64.0;
const long double sqrt23 = 0.81649658092772603;
const string string_blank = SS("                                         ") + "                 ";
const string string_format = SS("a64") + "";
const long double ten = 10.0;
const long double third = 0.33333333333333333;
const long double three = 3.0;
const long double threehalf = 1.5;
const long double twentyfourth = 0.041666666666666666;
const long double two = 2.0;
const long double twothird = 0.66666666666666667;
const long double zero = 0.0;
























/*!!v=================================================================================================*/
/*!!*/
/*!! *module type_vars - Define basic Fortran data types for Angelica**/
/*!!*/
/*!!v CVS Id: $Id: type_vars.F90,v 1.14 2007/02/23 19:17:29 jlin Exp $*/
/*!!*/
/*!! *Notes**/
/*!!*/
/*!!  1. E. Zywicz (Oct 2005) Updated*/
/*!!*/
/*!!  History:*/
/*!!*/
/*!!  - Original: R.M. Ferencz (May 2000)*/
/*!!*/
/*!   ================================================================================================*/
/*! */
/*!   Angelica*/
/*!   Methods Development Group, LLNL*/
/*!   Copyright (c) 2004-05 Regents of the University of California*/
/*! Scalar variable types to be used throughout code*/
/*! ------------------------------------------------*/
/*!        integer, parameter:: singR = selected_real_kind(6,35)*/
/*!        integer, parameter:: fullR = selected_real_kind(13,99)*/
/*!        integer, parameter:: singI = selected_int_kind(9)*/
/*!*/
/*!!        integer, parameter:: singR = kind(0.e0)  !problems if -r8 used*/
/*!*/
/*!The codes under this line have to be deleted while running converter(Terry 24.6.13)*/
/*!        integer, parameter:: singR = selected_real_kind(5)*/
/*!        integer, parameter:: fullR = kind(0.d0)*/
/*!        integer, parameter:: singI = kind(0)*/
/*!        integer, parameter:: fullI = selected_int_kind(18)*/
/*!        integer, parameter:: singL = kind(.true.)*/
/*!The codes above this line have to be deleted while running converter*/
/*! Caution: the size of a singI integer type and a singL logical type*/
/*!          must be the same for restart files to work correclty!*/
/*! Note: By the standard, the default real type, integer type, and*/
/*!       logical type are all the same size, i.e., same number of bytes!*/
/*! Numerical constants that might be useful*/
/*! ----------------------------------------*/
/*! 2^(-24) = 5.9604644775E-8*/





/*! Set the standard vector length*/
/*! -----------------------------------------------------------------*/
#ifdef UNICS


#else
#ifdef SUN

#else







#endif
#endif
/*! Other standard parameters (Probably should be in separate module)*/
/*! -----------------------------------------------------------------*/






#endif

